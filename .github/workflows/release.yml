name: release
on:
  release:
    types:
      - created
jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: 386
          - goos: linux
            goarch: amd64
          - goos: windows
            goarch: 386
          - goos: windows
            goarch: amd64
          - goos: darwin
            goarch: amd64
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.8'
      - name: Extract Version
        id: version_step
        run: |
          APP=ali-nacos
          VERSION=${GITHUB_REF#$"refs/tags/v"}
          ENV_PKG="go-ali-nacos/pkg/config"
          LDFLAGS="-X ${ENV_PKG}.IsDebug=0 -X ${ENV_PKG}.BuildTime=`date +%FT%T%z` -X ${ENV_PKG}.Version=${VERSION} -w -s"

          [ "${{ matrix.goos }}" = "windows" ] && EXT=".exe"

          echo "##[set-output name=version;]${VERSION}"
          echo "##[set-output name=ldflags;]${LDFLAGS}"
          echo "##[set-output name=build;]${APP}${EXT:-}"
          echo "##[set-output name=asset;]${APP}-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}.tgz"
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          #GOPROXY: "https://goproxy.cn"
        run: |
          go mod tidy
          go build -ldflags "${{ steps.version_step.outputs.ldflags }}" -o ${{ steps.version_step.outputs.build }} main.go
      - name: Packaing ...
        run: tar czf ${{ steps.version_step.outputs.asset }} ${{ steps.version_step.outputs.build }}
      - name: Uploading assets ...
        if: ${{ !env.ACT }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.version_step.outputs.asset }}
          asset_name: ${{ steps.version_step.outputs.asset }}
          asset_content_type: application/gzip